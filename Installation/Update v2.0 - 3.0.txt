Ersetze die Datei picupload.php; Beachte dabei, dass du deine Konfiguration in der Ausgangsdatei sicherst, und in die neue Datei picupload_functions.php einfügst!

Lade danach alle anderen Dateien in der vorgegebenen Ordnersturktur hoch. Überschreibe dabei ggf. schon vorhandene Dateien.

Ersetze den Inhalt des Templates "picupload" durch den Inhalt des mitgelieferten Templates.

Importiere das Template picupload_old.tpl

Template: headinclude
========  -----------

Suche:
<script src="js/picupload.js" type="text/javascript"></script>

Füge darüber ein:
<script src="js/jquery.js" type="text/javascript"></script>
<script src="js/upload.js" type="text/javascript"></script>
<script src="js/resize.js" type="text/javascript"></script>


Datei: addreply.php
====== ------------

Suche:
if (isset($_GET['inhalt']) && trim($_GET['inhalt']) != '') {
	if (isset($_GET['autosubmit']) && trim($_GET['autosubmit']) == "true") $autosubmit = 1;
	else $autosubmit = 0;

	$js_execute = "do_form_submit_newthread('','".htmlentities(str_replace("\n", '\n', trim(base64_decode(trim($_GET['inhalt'])))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1')."', '{$autosubmit}');";
}

Ersetze mit:
if (isset($_POST['inhalt']) && trim($_POST['inhalt']) != '') {
	if (isset($_POST['autosubmit']) && trim($_POST['autosubmit']) == "true") {
		$autosubmit = 1;
	} else {
		$autosubmit = 0;
	}

	$js_execute = "do_form_submit_newthread('','" . htmlentities(str_replace("\n", '\n', trim(base64_decode(trim($_POST['inhalt'])))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1') . "', '{$autosubmit}');";
}

Datei: newthread.php
====== -------------

Suche:
if (isset($_GET['inhalt']) && trim($_GET['inhalt']) != '' && isset($_GET['title']) && trim($_GET['title']) != '') {
	if (isset($_GET['autosubmit']) && trim($_GET['autosubmit']) == "true") $autosubmit = 1;
	else $autosubmit = 0;
	$js_execute = "do_form_submit_newthread('".htmlentities(str_replace("\n", "", base64_decode(trim($_GET['title']))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1')."','".htmlentities(str_replace("\n", '\n', trim(base64_decode(trim($_GET['inhalt'])))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1')."', '{$autosubmit}');";
}

Ersetze mit:
if (isset($_POST['inhalt']) && trim($_POST['inhalt']) != '' && isset($_POST['title']) && trim($_POST['title']) != '') {
	if (isset($_POST['autosubmit']) && trim($_POST['autosubmit']) == "true") {
		$autosubmit = 1;
	} else {
		$autosubmit = 0;
	}

	$js_execute = "do_form_submit_newthread('" . htmlentities(str_replace(array("'", "\n"), "", trim(base64_decode(trim($_POST['title'])))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1') . "','" . htmlentities(str_replace("\n", '\n', trim(base64_decode(trim($_POST['inhalt'])))), ENT_NOQUOTES | ENT_HTML401, 'ISO-8859-1') . "', '{$autosubmit}');";
}

Konfiguration anpassen: picupload_config.php
======================= --------------------

Du findets oben die Variable $fotoalben_board_id.
Wenn du in deinem Forum ein Board bereitgestellt hast, in das die Fotoalben alle reinkommen, dann stelle hier die ID des Forums ein.
Hast du soetwas nicht, setze den Wert auf 0.


Randompic der Woche:
====================

Wenn du die XY Megashoutbox Version 1.3 installiert hast, kannst du es deinen Nutzern ermöglichen, dass jede Woche ein Zufallsbild in der Shoutbox erscheint.
Jeder Nutzer hat die Möglichkeit, seine Alben für das Zufallsbild der Woche freizugeben.
Du musst nun die Datei pic2shoutbox.php immer dann aufrufen, wenn das Bild gepostet werden soll. Dies kann z.B. per Cronjob jeden Sonntag erfolgen. Wichtig ist, dass du (aus Sicherheitsgründen) den ersten Parameter 1 setzt. Das sieht dann etwa so aus:

:~# php pic2shoutbox.php 1

Daraufhin wird zufällig einer von zwei Algorithmen gestartet, die wiederum zufällig das Bild bestimmen.
Der erste Algorithmus nimmt sich alle freigegebenen Bilder und sucht davon zufällig ein Bild aus.
Der zweite Algorithmus sucht zufällig einen Nutzer, danach zufällig ein Album und dann zufällig nach einem Bild.


Fertig! :)


Viel Spaß bei der Verwendung,
kill0rz
http://kill0rz.com/
Stand: 19.07.2016